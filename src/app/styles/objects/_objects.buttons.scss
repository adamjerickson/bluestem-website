/*****************************************
 * BUTTONS
 *****************************************/

// A simple button object.

// Predefine the variables below in order to alter and enable specific features.
$btn-namespace:         $namespace !default;

$btn-padding:           halve($base-spacing-unit) !default;
$btn-padding--tiny:     quarter($btn-padding) !default;
$btn-padding--small:    halve($btn-padding) !default;
$btn-padding--large:    double($btn-padding) !default;
$btn-background:        $brand-primary !default;
$btn-color:             #fff !default;
$btn-border-width:      1px !default;
$btn-border-style:      solid !default;
$btn-border-color:      $btn-background !default;
$btn-radius:            0 !default;

$enable-btn--tiny:      false !default;
$enable-btn--small:     false !default;
$enable-btn--large:     false !default;
$enable-btn--full:      false !default;
$enable-btn--pill:      false !default;
$enable-btn--variants:  false !default;
$enable-btn--groups:    false !default;


// Here we set a variable assuming that `box-sizing: border-box;` is not set
// globally. If it has been previously been defined, the following variable will
// be overriden and will be set to `true`.
$global-border-box: false !default;



  // 1. Allow us to style box model properties.
  // 2. Line different sized buttons up a little nicer.
  // 3. Make buttons inherit font styles (often necessary when styling `input`s as
  //    buttons).
  // 4. Reset/normalize some styles.
  // 5. Force all button-styled elements to appear clickable.
  // 6. Fixes odd inner spacing in IE7.
  // 7. Subtract the border size from the padding value so that buttons do not
  //    grow larger as we add borders.

.#{$btn-namespace}btn,
%#{$btn-namespace}btn {
  display: inline-block; // [1]
  vertical-align: middle; // [2]
  font: inherit; // [3]
  text-align: center; // [4]
  margin:  0; // [4]
  cursor: pointer; // [5]
  overflow: visible; // [6]
  padding: $btn-padding - $btn-border-width  double($btn-padding) - $btn-border-width; // [7]
  background-color: $btn-background;
  user-select: none;
  font-weight: 600;
  transition: color .2s ease-in-out;
  display: inline-flex;
  align-items: center;
  justify-content: center;

  @if($btn-border-width != 0) {
    border: $btn-border-width $btn-border-style $btn-border-color;
  } @else {
    border: none; // [4]
  }

  @if($btn-radius != 0) {
    border-radius: $btn-radius;
  }

  &,
  &:hover,
  &:active,
  &:focus {
    text-decoration: none; // [4]
    color: $btn-color;
  }

  @include button_variant($btn-background, $btn-color);

}

// Fix a Firefox bug whereby `input type="submit"` gains 2px extra padding.
.#{$btn-namespace}btn::-moz-focus-inner,
%#{$btn-namespace}btn::-moz-focus-inner {
  border:  0;
  padding: 0;
}





@if ($enable-btn--tiny == true) {

    // Small buttons.

  .#{$btn-namespace}btn--tiny,
  %#{$btn-namespace}btn--tiny {
    padding: $btn-padding--tiny - $btn-border-width  double($btn-padding--tiny) - $btn-border-width; // [7]

    @include font-size($base-font-size - 4, inherit);
  }

}

@if ($enable-btn--small == true) {

    // Small buttons.

  .#{$btn-namespace}btn--small,
  %#{$btn-namespace}btn--small {
    padding: $btn-padding--small - $btn-border-width  double($btn-padding--small) - $btn-border-width; // [7]

    @include font-size($base-font-size - 2, inherit);
  }

}

@if ($enable-btn--large == true) {

  // Large buttons.

  .#{$btn-namespace}btn--large,
  %#{$btn-namespace}btn--large {
    padding: $btn-padding--large - $btn-border-width  double($btn-padding--large) - $btn-border-width; // [7]

    @include font-size($base-font-size + round($base-font-size / 2));
  }

}





@if ($enable-btn--full == true) {

  // Full-width buttons.

  .#{$btn-namespace}btn--full,
  %#{$btn-namespace}btn--full {
    width: 100%;

    @if $global-border-box == false {
      // Remove paddings so that widths and paddings donâ€™t conflict.

      padding-right: 0;
      padding-left:  0;
    }

  }

}





@if ($enable-btn--pill == true) {

  // Round-ended buttons.
  //
  // 1. Overly-large value to ensure the radius rounds the whole end of the
  //    button.


  .#{$btn-namespace}btn--pill,
  %#{$btn-namespace}btn--pill {
    border-radius: 100px; // [1]
  }

}



// Variants
@if ($enable-btn--variants == true) {
  .#{$btn-namespace}btn--primary {
    @include button_variant($color-primary);
  }

  .#{$btn-namespace}btn--danger {
    @include button_variant($color-danger);
  }

  .#{$btn-namespace}btn--remove {
    @include button_variant(lighten($color-danger, 30%), $color-danger);
    &:before { content: "\00d7"; }
  }

  .#{$btn-namespace}btn--success {
    @include button_variant($color-success);
  }

  .#{$btn-namespace}btn--link {
    @include button_variant(transparent, $color-link);
  }

  .#{$btn-namespace}btn--text {
    @include button_variant(transparent, $color-text, transparent);
  }

  .#{$btn-namespace}btn--active {
    @include button_variant(white, $color-primary, lighten($color-primary, 20%));
    z-index: 2;
  }
}


// Groups
@if ($enable-btn--groups == true) {
  .#{$btn-namespace}btn-group {
    @extend %clearfix;
    margin-right: -$btn-border-width;

    > .#{$btn-namespace}btn {
      // float: left;
      display: inline-block;
      position: relative;

      // hover
      &:hover {
        z-index: 2;
      }

      // first
      &:first-of-type:not(:last-of-type) {
        margin-left: 0;
        margin-right: 0;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
      }

      // middle
      &:not(:first-of-type):not(:last-of-type) {
        border-radius: 0;
      }

      // middle & last
      & + .#{$btn-namespace}btn {
        margin-left: -$btn-border-width;
        margin-right: 0;
      }

      // last
      &:last-of-type:not(:first-of-type) {
        margin-right: 0;
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
      }
    }
  }
}

